Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to system_mkl25z4.o(.text.SystemInit) for SystemInit
    main.o(.text.main) refers to pit.o(.text.PIT_HWconfig) for PIT_HWconfig
    main.o(.text.main) refers to pit.o(.text.PIT_IRQconfig) for PIT_IRQconfig
    main.o(.text.main) refers to port.o(.text.ports_HWconfig) for ports_HWconfig
    main.o(.text.main) refers to port.o(.text.ports_IRQconfig) for ports_IRQconfig
    main.o(.text.main) refers to gpio.o(.text.GPIO_HWconfig) for GPIO_HWconfig
    main.o(.text.main) refers to adc.o(.text.ADC_HWconfig) for ADC_HWconfig
    main.o(.text.main) refers to adc.o(.text.ADC_IRQconfig) for ADC_IRQconfig
    main.o(.text.main) refers to uart0.o(.text.UART0_HWconfig) for UART0_HWconfig
    main.o(.text.main) refers to uart0.o(.text.UART0_IRQconfig) for UART0_IRQconfig
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to threads.o(.text.RTOS_objects_config) for RTOS_objects_config
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_HWconfig) refers to adc.o(.text.ADC_HWconfig) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_SC1_write) refers to adc.o(.text.ADC_SC1_write) for [Anonymous Symbol]
    adc.o(.text.ADC_IRQconfig) refers to adc.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    adc.o(.text.ADC_IRQconfig) refers to adc.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    adc.o(.text.ADC_IRQconfig) refers to adc.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    adc.o(.ARM.exidx.text.ADC_IRQconfig) refers to adc.o(.text.ADC_IRQconfig) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.__NVIC_SetPriority) refers to adc.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to adc.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to adc.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    adc.o(.text.ADC0_IRQHandler) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    adc.o(.text.ADC0_IRQHandler) refers to adc.o(.bss.adc_result) for adc_result
    adc.o(.text.ADC0_IRQHandler) refers to threads.o(.bss.EventFlagId) for EventFlagId
    adc.o(.ARM.exidx.text.ADC0_IRQHandler) refers to adc.o(.text.ADC0_IRQHandler) for [Anonymous Symbol]
    gpio.o(.text.GPIO_HWconfig) refers to gpio.o(.text.GPIOA_HWconfig) for GPIOA_HWconfig
    gpio.o(.text.GPIO_HWconfig) refers to gpio.o(.text.GPIOB_HWconfig) for GPIOB_HWconfig
    gpio.o(.ARM.exidx.text.GPIO_HWconfig) refers to gpio.o(.text.GPIO_HWconfig) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOA_HWconfig) refers to gpio.o(.text.GPIOA_HWconfig) for [Anonymous Symbol]
    gpio.o(.text.GPIOB_HWconfig) refers to gpio.o(.text.set_pin) for set_pin
    gpio.o(.ARM.exidx.text.GPIOB_HWconfig) refers to gpio.o(.text.GPIOB_HWconfig) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.set_pin) refers to gpio.o(.text.set_pin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOC_HWconfig) refers to gpio.o(.text.GPIOC_HWconfig) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOD_HWconfig) refers to gpio.o(.text.GPIOD_HWconfig) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIOE_HWconfig) refers to gpio.o(.text.GPIOE_HWconfig) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.clear_pin) refers to gpio.o(.text.clear_pin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.toggle_pin) refers to gpio.o(.text.toggle_pin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.read_input_pin) refers to gpio.o(.text.read_input_pin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.read_output_pin) refers to gpio.o(.text.read_output_pin) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.PIT_HWconfig) refers to pit.o(.text.PIT_HWconfig) for [Anonymous Symbol]
    pit.o(.text.PIT_IRQconfig) refers to pit.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    pit.o(.text.PIT_IRQconfig) refers to pit.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    pit.o(.text.PIT_IRQconfig) refers to pit.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    pit.o(.ARM.exidx.text.PIT_IRQconfig) refers to pit.o(.text.PIT_IRQconfig) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.__NVIC_SetPriority) refers to pit.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to pit.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to pit.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.PIT_start) refers to pit.o(.text.PIT_start) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.PIT_stop) refers to pit.o(.text.PIT_stop) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.PIT_enabled) refers to pit.o(.text.PIT_enabled) for [Anonymous Symbol]
    pit.o(.ARM.exidx.text.PIT_IRQHandler) refers to pit.o(.text.PIT_IRQHandler) for [Anonymous Symbol]
    port.o(.text.ports_HWconfig) refers to port.o(.text.PORTA_HWconfig) for PORTA_HWconfig
    port.o(.text.ports_HWconfig) refers to port.o(.text.PORTB_HWconfig) for PORTB_HWconfig
    port.o(.ARM.exidx.text.ports_HWconfig) refers to port.o(.text.ports_HWconfig) for [Anonymous Symbol]
    port.o(.text.ports_IRQconfig) refers to port.o(.text.PORTA_IRQconfig) for PORTA_IRQconfig
    port.o(.ARM.exidx.text.ports_IRQconfig) refers to port.o(.text.ports_IRQconfig) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.PORTA_HWconfig) refers to port.o(.text.PORTA_HWconfig) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.PORTB_HWconfig) refers to port.o(.text.PORTB_HWconfig) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.PORTC_HWconfig) refers to port.o(.text.PORTC_HWconfig) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.PORTD_HWconfig) refers to port.o(.text.PORTD_HWconfig) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.PORTE_HWconfig) refers to port.o(.text.PORTE_HWconfig) for [Anonymous Symbol]
    port.o(.text.PORTA_IRQconfig) refers to port.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    port.o(.text.PORTA_IRQconfig) refers to port.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    port.o(.text.PORTA_IRQconfig) refers to port.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    port.o(.ARM.exidx.text.PORTA_IRQconfig) refers to port.o(.text.PORTA_IRQconfig) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.__NVIC_SetPriority) refers to port.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to port.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to port.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    port.o(.text.PORTD_IRQconfig) refers to port.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    port.o(.text.PORTD_IRQconfig) refers to port.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    port.o(.text.PORTD_IRQconfig) refers to port.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    port.o(.ARM.exidx.text.PORTD_IRQconfig) refers to port.o(.text.PORTD_IRQconfig) for [Anonymous Symbol]
    port.o(.text.PORTA_IRQHandler) refers to gpio.o(.text.read_input_pin) for read_input_pin
    port.o(.text.PORTA_IRQHandler) refers to pit.o(.text.PIT_enabled) for PIT_enabled
    port.o(.text.PORTA_IRQHandler) refers to pit.o(.text.PIT_stop) for PIT_stop
    port.o(.text.PORTA_IRQHandler) refers to gpio.o(.text.set_pin) for set_pin
    port.o(.text.PORTA_IRQHandler) refers to pit.o(.text.PIT_start) for PIT_start
    port.o(.ARM.exidx.text.PORTA_IRQHandler) refers to port.o(.text.PORTA_IRQHandler) for [Anonymous Symbol]
    threads.o(.text.RTOS_objects_config) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    threads.o(.text.RTOS_objects_config) refers to rtx_evflags.o(.text.osEventFlagsNew) for osEventFlagsNew
    threads.o(.text.RTOS_objects_config) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    threads.o(.text.RTOS_objects_config) refers to threads.o(.text.Thread_Convert_Temp) for Thread_Convert_Temp
    threads.o(.text.RTOS_objects_config) refers to threads.o(.bss.Tid_Convert_Temp) for Tid_Convert_Temp
    threads.o(.text.RTOS_objects_config) refers to threads.o(.text.Thread_Prepare_Msg) for Thread_Prepare_Msg
    threads.o(.text.RTOS_objects_config) refers to threads.o(.bss.Tid_Prepare_Msg) for Tid_Prepare_Msg
    threads.o(.text.RTOS_objects_config) refers to threads.o(.text.Thread_Transmit_Msg) for Thread_Transmit_Msg
    threads.o(.text.RTOS_objects_config) refers to threads.o(.bss.Tid_Transmit_Msg) for Tid_Transmit_Msg
    threads.o(.text.RTOS_objects_config) refers to threads.o(.bss.EventFlagId) for EventFlagId
    threads.o(.text.RTOS_objects_config) refers to threads.o(.bss.PrepMsgSemId) for PrepMsgSemId
    threads.o(.text.RTOS_objects_config) refers to threads.o(.bss.SendMsgSemId) for SendMsgSemId
    threads.o(.ARM.exidx.text.RTOS_objects_config) refers to threads.o(.text.RTOS_objects_config) for [Anonymous Symbol]
    threads.o(.text.Thread_Convert_Temp) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    threads.o(.text.Thread_Convert_Temp) refers to pit.o(.text.PIT_stop) for PIT_stop
    threads.o(.text.Thread_Convert_Temp) refers to fflti.o(.text) for __aeabi_ui2f
    threads.o(.text.Thread_Convert_Temp) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    threads.o(.text.Thread_Convert_Temp) refers to fdiv.o(.text) for __aeabi_fdiv
    threads.o(.text.Thread_Convert_Temp) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    threads.o(.text.Thread_Convert_Temp) refers to f2d.o(.text) for __aeabi_f2d
    threads.o(.text.Thread_Convert_Temp) refers to log.o(i.log) for log
    threads.o(.text.Thread_Convert_Temp) refers to d2f.o(.text) for __aeabi_d2f
    threads.o(.text.Thread_Convert_Temp) refers to ddiv.o(.text) for __aeabi_ddiv
    threads.o(.text.Thread_Convert_Temp) refers to daddsub.o(.text) for __aeabi_dadd
    threads.o(.text.Thread_Convert_Temp) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    threads.o(.text.Thread_Convert_Temp) refers to threads.o(.bss.EventFlagId) for EventFlagId
    threads.o(.text.Thread_Convert_Temp) refers to adc.o(.bss.adc_result) for adc_result
    threads.o(.text.Thread_Convert_Temp) refers to threads.o(.bss.V_Temp) for V_Temp
    threads.o(.text.Thread_Convert_Temp) refers to threads.o(.bss.R_Temp) for R_Temp
    threads.o(.text.Thread_Convert_Temp) refers to threads.o(.bss.neg_log_R_Temp) for neg_log_R_Temp
    threads.o(.text.Thread_Convert_Temp) refers to threads.o(.bss.TempK) for TempK
    threads.o(.text.Thread_Convert_Temp) refers to threads.o(.bss.TempF) for TempF
    threads.o(.text.Thread_Convert_Temp) refers to threads.o(.bss.PrepMsgSemId) for PrepMsgSemId
    threads.o(.ARM.exidx.text.Thread_Convert_Temp) refers to threads.o(.text.Thread_Convert_Temp) for [Anonymous Symbol]
    threads.o(.text.Thread_Prepare_Msg) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    threads.o(.text.Thread_Prepare_Msg) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    threads.o(.text.Thread_Prepare_Msg) refers to uart0.o(.text.UART_TXQ_Full) for UART_TXQ_Full
    threads.o(.text.Thread_Prepare_Msg) refers to uart0.o(.text.UART_TX_Enqueque) for UART_TX_Enqueque
    threads.o(.text.Thread_Prepare_Msg) refers to fcmp.o(i._fls) for __aeabi_fcmplt
    threads.o(.text.Thread_Prepare_Msg) refers to fcmp.o(i._fleq) for __aeabi_fcmple
    threads.o(.text.Thread_Prepare_Msg) refers to fcmp.o(i._fgeq) for __aeabi_fcmpge
    threads.o(.text.Thread_Prepare_Msg) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    threads.o(.text.Thread_Prepare_Msg) refers to ffixi.o(.text) for __aeabi_f2iz
    threads.o(.text.Thread_Prepare_Msg) refers to aeabi_sdiv.o(.text) for __aeabi_idiv
    threads.o(.text.Thread_Prepare_Msg) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    threads.o(.text.Thread_Prepare_Msg) refers to threads.o(.rodata..L__const.Thread_Prepare_Msg.message) for [Anonymous Symbol]
    threads.o(.text.Thread_Prepare_Msg) refers to threads.o(.bss.PrepMsgSemId) for PrepMsgSemId
    threads.o(.text.Thread_Prepare_Msg) refers to threads.o(.bss.TempF) for TempF
    threads.o(.text.Thread_Prepare_Msg) refers to threads.o(.bss.SendMsgSemId) for SendMsgSemId
    threads.o(.ARM.exidx.text.Thread_Prepare_Msg) refers to threads.o(.text.Thread_Prepare_Msg) for [Anonymous Symbol]
    threads.o(.text.Thread_Transmit_Msg) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    threads.o(.text.Thread_Transmit_Msg) refers to uart0.o(.text.UART0_TED) for UART0_TED
    threads.o(.text.Thread_Transmit_Msg) refers to uart0.o(.text.UART0_TIED) for UART0_TIED
    threads.o(.text.Thread_Transmit_Msg) refers to uart0.o(.text.UART0_TIE) for UART0_TIE
    threads.o(.text.Thread_Transmit_Msg) refers to pit.o(.text.PIT_start) for PIT_start
    threads.o(.text.Thread_Transmit_Msg) refers to threads.o(.bss.SendMsgSemId) for SendMsgSemId
    threads.o(.ARM.exidx.text.Thread_Transmit_Msg) refers to threads.o(.text.Thread_Transmit_Msg) for [Anonymous Symbol]
    uart0.o(.text.UART0_HWconfig) refers to uart0.o(.text.UART0_TED) for UART0_TED
    uart0.o(.text.UART0_HWconfig) refers to uart0.o(.text.UART0_RED) for UART0_RED
    uart0.o(.text.UART0_HWconfig) refers to dflti.o(.text) for __aeabi_ui2d
    uart0.o(.text.UART0_HWconfig) refers to ddiv.o(.text) for __aeabi_ddiv
    uart0.o(.text.UART0_HWconfig) refers to dfixi.o(.text) for __aeabi_d2iz
    uart0.o(.ARM.exidx.text.UART0_HWconfig) refers to uart0.o(.text.UART0_HWconfig) for [Anonymous Symbol]
    uart0.o(.ARM.exidx.text.UART0_TED) refers to uart0.o(.text.UART0_TED) for [Anonymous Symbol]
    uart0.o(.ARM.exidx.text.UART0_RED) refers to uart0.o(.text.UART0_RED) for [Anonymous Symbol]
    uart0.o(.ARM.exidx.text.UART0_TIED) refers to uart0.o(.text.UART0_TIED) for [Anonymous Symbol]
    uart0.o(.ARM.exidx.text.UART0_TIE) refers to uart0.o(.text.UART0_TIE) for [Anonymous Symbol]
    uart0.o(.text.UART_TX_Enqueque) refers to uart0.o(.text.UART_TXQ_Full) for UART_TXQ_Full
    uart0.o(.text.UART_TX_Enqueque) refers to uart0.o(.bss.TXQ_tail) for TXQ_tail
    uart0.o(.text.UART_TX_Enqueque) refers to uart0.o(.bss.TX_queque) for TX_queque
    uart0.o(.text.UART_TX_Enqueque) refers to uart0.o(.data.TXQ_size) for TXQ_size
    uart0.o(.ARM.exidx.text.UART_TX_Enqueque) refers to uart0.o(.text.UART_TX_Enqueque) for [Anonymous Symbol]
    uart0.o(.text.UART_TX_Dequeque) refers to uart0.o(.bss.TXQ_head) for TXQ_head
    uart0.o(.text.UART_TX_Dequeque) refers to uart0.o(.bss.TX_queque) for TX_queque
    uart0.o(.text.UART_TX_Dequeque) refers to uart0.o(.data.TXQ_size) for TXQ_size
    uart0.o(.ARM.exidx.text.UART_TX_Dequeque) refers to uart0.o(.text.UART_TX_Dequeque) for [Anonymous Symbol]
    uart0.o(.text.UART_TXQ_Empty) refers to uart0.o(.data.TXQ_size) for TXQ_size
    uart0.o(.ARM.exidx.text.UART_TXQ_Empty) refers to uart0.o(.text.UART_TXQ_Empty) for [Anonymous Symbol]
    uart0.o(.text.UART_TXQ_Full) refers to uart0.o(.data.TXQ_size) for TXQ_size
    uart0.o(.ARM.exidx.text.UART_TXQ_Full) refers to uart0.o(.text.UART_TXQ_Full) for [Anonymous Symbol]
    uart0.o(.text.UART0_IRQconfig) refers to uart0.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    uart0.o(.text.UART0_IRQconfig) refers to uart0.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    uart0.o(.text.UART0_IRQconfig) refers to uart0.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart0.o(.ARM.exidx.text.UART0_IRQconfig) refers to uart0.o(.text.UART0_IRQconfig) for [Anonymous Symbol]
    uart0.o(.ARM.exidx.text.__NVIC_SetPriority) refers to uart0.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    uart0.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to uart0.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    uart0.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to uart0.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    uart0.o(.text.UART0_IRQHandler) refers to uart0.o(.text.UART_TXQ_Empty) for UART_TXQ_Empty
    uart0.o(.text.UART0_IRQHandler) refers to uart0.o(.text.UART_TX_Dequeque) for UART_TX_Dequeque
    uart0.o(.text.UART0_IRQHandler) refers to gpio.o(.text.clear_pin) for clear_pin
    uart0.o(.text.UART0_IRQHandler) refers to uart0.o(.text.UART0_TIED) for UART0_TIED
    uart0.o(.text.UART0_IRQHandler) refers to gpio.o(.text.set_pin) for set_pin
    uart0.o(.ARM.exidx.text.UART0_IRQHandler) refers to uart0.o(.text.UART0_IRQHandler) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for [Anonymous Symbol]
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv6m.o(.rodata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    startup_mkl25z4.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(STACK) for __initial_sp
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(.text) for Reset_Handler
    startup_mkl25z4.o(RESET) refers to irq_armv6m.o(.text) for SVC_Handler
    startup_mkl25z4.o(RESET) refers to uart0.o(.text.UART0_IRQHandler) for UART0_IRQHandler
    startup_mkl25z4.o(RESET) refers to adc.o(.text.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_mkl25z4.o(RESET) refers to pit.o(.text.PIT_IRQHandler) for PIT_IRQHandler
    startup_mkl25z4.o(RESET) refers to port.o(.text.PORTA_IRQHandler) for PORTA_IRQHandler
    startup_mkl25z4.o(.ARM.__at_0x400) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers to system_mkl25z4.o(.text.SystemInit) for SystemInit
    startup_mkl25z4.o(.text) refers to __main.o(!!!main) for __main
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(HEAP) for Heap_Mem
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(STACK) for Stack_Mem
    system_mkl25z4.o(.ARM.exidx.text.SystemInit) refers to system_mkl25z4.o(.text.SystemInit) for [Anonymous Symbol]
    system_mkl25z4.o(.text.SystemCoreClockUpdate) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    system_mkl25z4.o(.text.SystemCoreClockUpdate) refers to system_mkl25z4.o(.data.SystemCoreClock) for SystemCoreClock
    system_mkl25z4.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mkl25z4.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv6m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv6m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv6m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv6m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv6m.o(.ARM.exidx) refers to irq_armv6m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_mkl25z4.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mkl25z4.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers to ddiv.o(.constdata) for .constdata
    ddiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fcmp.o(i._feq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._feq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(i._fgeq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgeq) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fgr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgr) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fleq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fleq) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fls) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fls) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fneq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fneq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log.o(i.__softfp_log) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log.o(i.__softfp_log) refers to log.o(i.log) for log
    log.o(i.log) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    log.o(i.log) refers to dunder.o(i.__mathlib_dbl_infnan) for __mathlib_dbl_infnan
    log.o(i.log) refers to _rserrno.o(.text) for __set_errno
    log.o(i.log) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    log.o(i.log) refers to dunder.o(i.__mathlib_dbl_divzero) for __mathlib_dbl_divzero
    log.o(i.log) refers to dscalbn.o(.text) for __ARM_scalbn
    log.o(i.log) refers to daddsub.o(.text) for __aeabi_dsub
    log.o(i.log) refers to deqf.o(x$fpl$deqf) for __aeabi_cdcmpeq
    log.o(i.log) refers to dflti.o(.text) for __aeabi_i2d
    log.o(i.log) refers to dmul.o(.text) for __aeabi_dmul
    log.o(i.log) refers to ddiv.o(.text) for __aeabi_ddiv
    log.o(i.log) refers to poly.o(i.__kernel_poly) for __kernel_poly
    log.o(i.log) refers to qnan.o(.constdata) for __mathlib_zero
    log.o(i.log) refers to log.o(.constdata) for .constdata
    log.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _rserrno.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    deqf.o(x$fpl$deqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    deqf.o(x$fpl$deqf) refers to dcmpin.o(.text) for __fpl_dcmp_InfNaN
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dscalbn.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    fgef.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgef.o(x$fpl$fgeqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    flef.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    flef.o(x$fpl$fleqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    dunder.o(i.__mathlib_dbl_divzero) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_infnan) refers to dscalbn.o(.text) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_infnan2) refers to daddsub.o(.text) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_invalid) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_overflow) refers to dscalbn.o(.text) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_posinfnan) refers to dmul.o(.text) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_underflow) refers to dscalbn.o(.text) for __ARM_scalbn
    poly.o(i.__kernel_poly) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(.text) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to daddsub.o(.text) for __aeabi_dadd
    qnan.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text.__user_perthread_libspace) for __user_perthread_libspace
    dcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    dcmpin.o(.text) refers to dnan2.o(.text) for __fpl_dcheck_NaN2
    fcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    fcmpin.o(.text) refers to fnan2.o(.text) for __fpl_fcheck_NaN2
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mkl25z4.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    cmpret.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    fnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    retnan.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_HWconfig), (8 bytes).
    Removing adc.o(.text.ADC_SC1_write), (40 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_SC1_write), (8 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_IRQconfig), (8 bytes).
    Removing adc.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing adc.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing adc.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing adc.o(.ARM.exidx.text.ADC0_IRQHandler), (8 bytes).
    Removing adc.o(.bss.adc_conv_complete), (1 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_HWconfig), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOA_HWconfig), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOB_HWconfig), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.set_pin), (8 bytes).
    Removing gpio.o(.text.GPIOC_HWconfig), (2 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOC_HWconfig), (8 bytes).
    Removing gpio.o(.text.GPIOD_HWconfig), (2 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOD_HWconfig), (8 bytes).
    Removing gpio.o(.text.GPIOE_HWconfig), (2 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIOE_HWconfig), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.clear_pin), (8 bytes).
    Removing gpio.o(.text.toggle_pin), (160 bytes).
    Removing gpio.o(.ARM.exidx.text.toggle_pin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.read_input_pin), (8 bytes).
    Removing gpio.o(.text.read_output_pin), (168 bytes).
    Removing gpio.o(.ARM.exidx.text.read_output_pin), (8 bytes).
    Removing pit.o(.text), (0 bytes).
    Removing pit.o(.ARM.exidx.text.PIT_HWconfig), (8 bytes).
    Removing pit.o(.ARM.exidx.text.PIT_IRQconfig), (8 bytes).
    Removing pit.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing pit.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing pit.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing pit.o(.ARM.exidx.text.PIT_start), (8 bytes).
    Removing pit.o(.ARM.exidx.text.PIT_stop), (8 bytes).
    Removing pit.o(.ARM.exidx.text.PIT_enabled), (8 bytes).
    Removing pit.o(.ARM.exidx.text.PIT_IRQHandler), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.ports_HWconfig), (8 bytes).
    Removing port.o(.ARM.exidx.text.ports_IRQconfig), (8 bytes).
    Removing port.o(.ARM.exidx.text.PORTA_HWconfig), (8 bytes).
    Removing port.o(.ARM.exidx.text.PORTB_HWconfig), (8 bytes).
    Removing port.o(.text.PORTC_HWconfig), (2 bytes).
    Removing port.o(.ARM.exidx.text.PORTC_HWconfig), (8 bytes).
    Removing port.o(.text.PORTD_HWconfig), (2 bytes).
    Removing port.o(.ARM.exidx.text.PORTD_HWconfig), (8 bytes).
    Removing port.o(.text.PORTE_HWconfig), (2 bytes).
    Removing port.o(.ARM.exidx.text.PORTE_HWconfig), (8 bytes).
    Removing port.o(.ARM.exidx.text.PORTA_IRQconfig), (8 bytes).
    Removing port.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing port.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing port.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing port.o(.text.PORTD_IRQconfig), (30 bytes).
    Removing port.o(.ARM.exidx.text.PORTD_IRQconfig), (8 bytes).
    Removing port.o(.ARM.exidx.text.PORTA_IRQHandler), (8 bytes).
    Removing threads.o(.text), (0 bytes).
    Removing threads.o(.ARM.exidx.text.RTOS_objects_config), (8 bytes).
    Removing threads.o(.ARM.exidx.text.Thread_Convert_Temp), (8 bytes).
    Removing threads.o(.ARM.exidx.text.Thread_Prepare_Msg), (8 bytes).
    Removing threads.o(.ARM.exidx.text.Thread_Transmit_Msg), (8 bytes).
    Removing uart0.o(.text), (0 bytes).
    Removing uart0.o(.ARM.exidx.text.UART0_HWconfig), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART0_TED), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART0_RED), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART0_TIED), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART0_TIE), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART_TX_Enqueque), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART_TX_Dequeque), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART_TXQ_Empty), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART_TXQ_Full), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART0_IRQconfig), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.UART0_IRQHandler), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing system_mkl25z4.o(.text), (0 bytes).
    Removing system_mkl25z4.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mkl25z4.o(.text.SystemCoreClockUpdate), (556 bytes).
    Removing system_mkl25z4.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (128 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (46 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (18 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (18 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (96 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (18 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (40 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (18 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (96 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing irq_armv6m.o(.rodata), (1 bytes).
    Removing irq_armv6m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (432 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (160 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

451 unused section(s) (total 9454 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/fenv.c                           0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/cmp.c                    0x00000000   Number         0  fcmp.o ABSOLUTE
    ../fplib/cfplib/cmpret.c                 0x00000000   Number         0  cmpret.o ABSOLUTE
    ../fplib/cfplib/d2f.c                    0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/cfplib/daddsub.c                0x00000000   Number         0  daddsub.o ABSOLUTE
    ../fplib/cfplib/dcmpin.c                 0x00000000   Number         0  dcmpin.o ABSOLUTE
    ../fplib/cfplib/ddiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/f2d.c                    0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/cfplib/fcmpin.c                 0x00000000   Number         0  fcmpin.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  dnan2.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  fnan2.o ABSOLUTE
    ../fplib/cfplib/retnan.c                 0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/cfplib/scalbn.c                 0x00000000   Number         0  dscalbn.o ABSOLUTE
    ../fplib/deqf6m.s                        0x00000000   Number         0  deqf.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/feqf6m.s                        0x00000000   Number         0  feqf.o ABSOLUTE
    ../fplib/fgeqf6m.s                       0x00000000   Number         0  fgef.o ABSOLUTE
    ../fplib/fleqf6m.s                       0x00000000   Number         0  flef.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/dunder.c                      0x00000000   Number         0  dunder.o ABSOLUTE
    ../mathlib/log.c                         0x00000000   Number         0  log.o ABSOLUTE
    ../mathlib/poly.c                        0x00000000   Number         0  poly.o ABSOLUTE
    ../mathlib/qnan.c                        0x00000000   Number         0  qnan.o ABSOLUTE
    ADC.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    GPIO.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    PIT.c                                    0x00000000   Number         0  pit.o ABSOLUTE
    PORT.c                                   0x00000000   Number         0  port.o ABSOLUTE
    RTE/Device/MKL25Z128xxx4/startup_MKL25Z4.s 0x00000000   Number         0  startup_mkl25z4.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    Threads.c                                0x00000000   Number         0  threads.o ABSOLUTE
    UART0.c                                  0x00000000   Number         0  uart0.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    system_MKL25Z4.c                         0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_mkl25z4.o(RESET)
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv6m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv6m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv6m.o ABSOLUTE
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0000013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0000013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000144   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0000014a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x00000152   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000156   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000156   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000015e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000160   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000160   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000164   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x0000016c   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x000001a4   Section       64  startup_mkl25z4.o(.text)
    [Anonymous Symbol]                       0x000001e4   Section        0  irq_armv6m.o(.text)
    SVC_Number                               0x000001ee   Number         0  irq_armv6m.o(.text)
    SVC_Context                              0x00000204   Number         0  irq_armv6m.o(.text)
    SVC_ContextSave                          0x00000214   Number         0  irq_armv6m.o(.text)
    SVC_ContextRestore                       0x00000228   Number         0  irq_armv6m.o(.text)
    SVC_MSP                                  0x00000244   Number         0  irq_armv6m.o(.text)
    SVC_Exit                                 0x0000024a   Number         0  irq_armv6m.o(.text)
    SVC_User                                 0x0000024c   Number         0  irq_armv6m.o(.text)
    .text                                    0x00000288   Section        0  rt_memcpy.o(.text)
    .text                                    0x0000030a   Section        0  rt_memclr.o(.text)
    .text                                    0x0000034a   Section        0  heapauxi.o(.text)
    .text                                    0x00000350   Section        0  d2f.o(.text)
    .text                                    0x000003cc   Section        0  _rserrno.o(.text)
    .text                                    0x000003e2   Section        8  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x000003ec   Section        8  libspace.o(.text)
    .text                                    0x000003f4   Section        0  sys_exit.o(.text)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mkl25z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section      364  aeabi_sdiv.o(.text)
    _dadd1                                   0x0000057d   Thumb Code   290  daddsub.o(.text)
    .text                                    0x0000057c   Section        0  daddsub.o(.text)
    _dsub1                                   0x0000069f   Thumb Code   470  daddsub.o(.text)
    .text                                    0x000008d4   Section        0  ddiv.o(.text)
    .text                                    0x00000d1c   Section        0  dfixi.o(.text)
    .text                                    0x00000d88   Section        0  dflti.o(.text)
    .text                                    0x00000de0   Section        0  f2d.o(.text)
    .text                                    0x00000e34   Section        0  fdiv.o(.text)
    .text                                    0x00000f94   Section        0  ffixi.o(.text)
    .text                                    0x00000fe0   Section        0  fflti.o(.text)
    .text                                    0x00001040   Section        0  dmul.o(.text)
    .text                                    0x00001288   Section        0  dscalbn.o(.text)
    .text                                    0x000012e8   Section        0  dcmpin.o(.text)
    .text                                    0x00001388   Section        0  fcmpin.o(.text)
    .text                                    0x000013ec   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x0000142a   Section        0  exit.o(.text)
    .text                                    0x0000143a   Section        0  cmpret.o(.text)
    .text                                    0x00001468   Section        0  dnan2.o(.text)
    .text                                    0x0000147c   Section        0  fnan2.o(.text)
    .text                                    0x0000148c   Section        0  retnan.o(.text)
    .text                                    0x000014ea   Section        2  use_no_semi.o(.text)
    [Anonymous Symbol]                       0x000014ec   Section        0  adc.o(.text.ADC0_IRQHandler)
    .text                                    0x000014ec   Section        0  indicate_semi.o(.text)
    __arm_cp.6_0                             0x00001504   Number         4  adc.o(.text.ADC0_IRQHandler)
    __arm_cp.6_1                             0x00001508   Number         4  adc.o(.text.ADC0_IRQHandler)
    __arm_cp.6_2                             0x0000150c   Number         4  adc.o(.text.ADC0_IRQHandler)
    [Anonymous Symbol]                       0x00001510   Section        0  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_1                             0x00001614   Number         4  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_2                             0x00001618   Number         4  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_3                             0x0000161c   Number         4  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_4                             0x00001620   Number         4  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_5                             0x00001624   Number         4  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_6                             0x00001628   Number         4  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_7                             0x0000162c   Number         4  adc.o(.text.ADC_HWconfig)
    __arm_cp.0_8                             0x00001630   Number         4  adc.o(.text.ADC_HWconfig)
    [Anonymous Symbol]                       0x00001634   Section        0  adc.o(.text.ADC_IRQconfig)
    EventFlagsCheck                          0x00001653   Thumb Code    74  rtx_evflags.o(.text.EventFlagsCheck)
    [Anonymous Symbol]                       0x00001652   Section        0  rtx_evflags.o(.text.EventFlagsCheck)
    [Anonymous Symbol]                       0x0000169c   Section        0  gpio.o(.text.GPIOA_HWconfig)
    __arm_cp.1_0                             0x000016a8   Number         4  gpio.o(.text.GPIOA_HWconfig)
    [Anonymous Symbol]                       0x000016ac   Section        0  gpio.o(.text.GPIOB_HWconfig)
    __arm_cp.2_0                             0x000016c4   Number         4  gpio.o(.text.GPIOB_HWconfig)
    [Anonymous Symbol]                       0x000016c8   Section        0  gpio.o(.text.GPIO_HWconfig)
    MessageQueueGet                          0x000016d5   Thumb Code    66  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x000016d4   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x00001717   Thumb Code    94  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00001716   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x00001775   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00001774   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00001794   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0000179c   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x000017bc   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x000017c0   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x000017c8   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x00001804   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00001808   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x0000180c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00001810   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x00001814   Section        0  pit.o(.text.PIT_HWconfig)
    __arm_cp.0_0                             0x0000186c   Number         4  pit.o(.text.PIT_HWconfig)
    __arm_cp.0_1                             0x00001870   Number         4  pit.o(.text.PIT_HWconfig)
    __arm_cp.0_2                             0x00001874   Number         4  pit.o(.text.PIT_HWconfig)
    [Anonymous Symbol]                       0x00001878   Section        0  pit.o(.text.PIT_IRQHandler)
    __arm_cp.8_0                             0x000018ac   Number         4  pit.o(.text.PIT_IRQHandler)
    __arm_cp.8_1                             0x000018b0   Number         4  pit.o(.text.PIT_IRQHandler)
    [Anonymous Symbol]                       0x000018b4   Section        0  pit.o(.text.PIT_IRQconfig)
    [Anonymous Symbol]                       0x000018d4   Section        0  pit.o(.text.PIT_enabled)
    [Anonymous Symbol]                       0x000018ec   Section        0  pit.o(.text.PIT_start)
    [Anonymous Symbol]                       0x00001904   Section        0  pit.o(.text.PIT_stop)
    __arm_cp.6_0                             0x0000191c   Number         4  pit.o(.text.PIT_stop)
    [Anonymous Symbol]                       0x00001920   Section        0  port.o(.text.PORTA_HWconfig)
    __arm_cp.2_1                             0x00001968   Number         4  port.o(.text.PORTA_HWconfig)
    __arm_cp.2_2                             0x0000196c   Number         4  port.o(.text.PORTA_HWconfig)
    __arm_cp.2_3                             0x00001970   Number         4  port.o(.text.PORTA_HWconfig)
    [Anonymous Symbol]                       0x00001974   Section        0  port.o(.text.PORTA_IRQHandler)
    __arm_cp.12_0                            0x000019c4   Number         4  port.o(.text.PORTA_IRQHandler)
    [Anonymous Symbol]                       0x000019c8   Section        0  port.o(.text.PORTA_IRQconfig)
    [Anonymous Symbol]                       0x000019e8   Section        0  port.o(.text.PORTB_HWconfig)
    __arm_cp.3_1                             0x00001a0c   Number         4  port.o(.text.PORTB_HWconfig)
    __arm_cp.3_2                             0x00001a10   Number         4  port.o(.text.PORTB_HWconfig)
    [Anonymous Symbol]                       0x00001a14   Section        0  threads.o(.text.RTOS_objects_config)
    __arm_cp.0_0                             0x00001a74   Number         4  threads.o(.text.RTOS_objects_config)
    __arm_cp.0_1                             0x00001a78   Number         4  threads.o(.text.RTOS_objects_config)
    __arm_cp.0_2                             0x00001a7c   Number         4  threads.o(.text.RTOS_objects_config)
    __arm_cp.0_3                             0x00001a80   Number         4  threads.o(.text.RTOS_objects_config)
    __arm_cp.0_4                             0x00001a84   Number         4  threads.o(.text.RTOS_objects_config)
    __arm_cp.0_5                             0x00001a88   Number         4  threads.o(.text.RTOS_objects_config)
    __arm_cp.0_8                             0x00001a8c   Number         4  threads.o(.text.RTOS_objects_config)
    SemaphoreTokenDecrement                  0x00001a91   Thumb Code    32  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    [Anonymous Symbol]                       0x00001a90   Section        0  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    SemaphoreTokenIncrement                  0x00001ab1   Thumb Code    34  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x00001ab0   Section        0  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x00001ad4   Section        0  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_0                             0x00001bd4   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_1                             0x00001bd8   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_2                             0x00001bdc   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_3                             0x00001be0   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_4                             0x00001be4   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_5                             0x00001be8   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_6                             0x00001bec   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_7                             0x00001bf0   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_8                             0x00001bf4   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_9                             0x00001bf8   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_10                            0x00001bfc   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_11                            0x00001c00   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_12                            0x00001c04   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_13                            0x00001c08   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_14                            0x00001c0c   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_15                            0x00001c10   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_16                            0x00001c14   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_17                            0x00001c18   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_18                            0x00001c1c   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_19                            0x00001c20   Number         4  system_mkl25z4.o(.text.SystemInit)
    ThreadFlagsCheck                         0x00001c25   Thumb Code    74  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00001c24   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00001c70   Section        0  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_0                             0x00001d50   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_1                             0x00001d54   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_2                             0x00001d58   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_3                             0x00001d5c   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_4                             0x00001d60   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_5                             0x00001d64   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_6                             0x00001d68   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_7                             0x00001d6c   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_8                             0x00001d70   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_9                             0x00001d74   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_10                            0x00001d78   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_11                            0x00001d7c   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_12                            0x00001d80   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_13                            0x00001d84   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_14                            0x00001d88   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_15                            0x00001d8c   Number         4  threads.o(.text.Thread_Convert_Temp)
    __arm_cp.1_17                            0x00001d90   Number         4  threads.o(.text.Thread_Convert_Temp)
    [Anonymous Symbol]                       0x00001d94   Section        0  threads.o(.text.Thread_Prepare_Msg)
    __arm_cp.2_0                             0x00001f18   Number         4  threads.o(.text.Thread_Prepare_Msg)
    __arm_cp.2_1                             0x00001f1c   Number         4  threads.o(.text.Thread_Prepare_Msg)
    __arm_cp.2_2                             0x00001f20   Number         4  threads.o(.text.Thread_Prepare_Msg)
    [Anonymous Symbol]                       0x00001f24   Section        0  threads.o(.text.Thread_Transmit_Msg)
    __arm_cp.3_0                             0x00001f70   Number         4  threads.o(.text.Thread_Transmit_Msg)
    TimerInsert                              0x00001f75   Thumb Code    72  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00001f74   Section        0  rtx_timer.o(.text.TimerInsert)
    __arm_cp.9_0                             0x00001fbc   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00001fc0   Section        0  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_0                             0x000021ac   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_1                             0x000021b0   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_2                             0x000021b4   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_3                             0x000021b8   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_4                             0x000021bc   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_5                             0x000021c0   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_6                             0x000021c4   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_8                             0x000021c8   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_9                             0x000021cc   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_10                            0x000021d0   Number         4  uart0.o(.text.UART0_HWconfig)
    __arm_cp.0_11                            0x000021d4   Number         4  uart0.o(.text.UART0_HWconfig)
    [Anonymous Symbol]                       0x000021d8   Section        0  uart0.o(.text.UART0_IRQHandler)
    __arm_cp.13_0                            0x000022bc   Number         4  uart0.o(.text.UART0_IRQHandler)
    __arm_cp.13_1                            0x000022c0   Number         4  uart0.o(.text.UART0_IRQHandler)
    [Anonymous Symbol]                       0x000022c4   Section        0  uart0.o(.text.UART0_IRQconfig)
    [Anonymous Symbol]                       0x000022e4   Section        0  uart0.o(.text.UART0_RED)
    [Anonymous Symbol]                       0x00002310   Section        0  uart0.o(.text.UART0_TED)
    [Anonymous Symbol]                       0x0000233c   Section        0  uart0.o(.text.UART0_TIE)
    [Anonymous Symbol]                       0x00002364   Section        0  uart0.o(.text.UART0_TIED)
    __arm_cp.3_0                             0x00002390   Number         4  uart0.o(.text.UART0_TIED)
    [Anonymous Symbol]                       0x00002394   Section        0  uart0.o(.text.UART_TXQ_Empty)
    [Anonymous Symbol]                       0x000023b8   Section        0  uart0.o(.text.UART_TXQ_Full)
    [Anonymous Symbol]                       0x000023dc   Section        0  uart0.o(.text.UART_TX_Dequeque)
    __arm_cp.6_0                             0x00002410   Number         4  uart0.o(.text.UART_TX_Dequeque)
    [Anonymous Symbol]                       0x00002414   Section        0  uart0.o(.text.UART_TX_Enqueque)
    __arm_cp.5_0                             0x00002458   Number         4  uart0.o(.text.UART_TX_Enqueque)
    __arm_cp.5_1                             0x0000245c   Number         4  uart0.o(.text.UART_TX_Enqueque)
    __arm_cp.5_2                             0x00002460   Number         4  uart0.o(.text.UART_TX_Enqueque)
    __NVIC_ClearPendingIRQ                   0x00002465   Thumb Code    40  adc.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x00002464   Section        0  adc.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_ClearPendingIRQ                   0x0000248d   Thumb Code    40  pit.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x0000248c   Section        0  pit.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_ClearPendingIRQ                   0x000024b5   Thumb Code    40  port.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x000024b4   Section        0  port.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_ClearPendingIRQ                   0x000024dd   Thumb Code    40  uart0.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x000024dc   Section        0  uart0.o(.text.__NVIC_ClearPendingIRQ)
    __arm_cp.11_0                            0x00002504   Number         4  uart0.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_EnableIRQ                         0x00002509   Thumb Code    40  adc.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002508   Section        0  adc.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002531   Thumb Code    40  pit.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002530   Section        0  pit.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002559   Thumb Code    40  port.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002558   Section        0  port.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002581   Thumb Code    40  uart0.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002580   Section        0  uart0.o(.text.__NVIC_EnableIRQ)
    __arm_cp.12_0                            0x000025a8   Number         4  uart0.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x000025ad   Thumb Code   124  adc.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000025ac   Section        0  adc.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00002629   Thumb Code   124  pit.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00002628   Section        0  pit.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x000026a5   Thumb Code   124  port.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000026a4   Section        0  port.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00002721   Thumb Code   124  uart0.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00002720   Section        0  uart0.o(.text.__NVIC_SetPriority)
    __arm_cp.10_0                            0x0000279c   Number         4  uart0.o(.text.__NVIC_SetPriority)
    __arm_cp.10_1                            0x000027a0   Number         4  uart0.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000027a4   Section        0  rtx_lib.o(.text.__user_perthread_libspace)
    __arm_cp.1_0                             0x00002824   Number         4  rtx_lib.o(.text.__user_perthread_libspace)
    __arm_cp.1_1                             0x00002828   Number         4  rtx_lib.o(.text.__user_perthread_libspace)
    __tagsym$$used.1                         0x0000282c   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x0000282c   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x0000284e   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x0000284e   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x00002860   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x00002860   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x00002894   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x00002894   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x000028b2   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x000028bc   Section        0  gpio.o(.text.clear_pin)
    __arm_cp.7_0                             0x00002948   Number         4  gpio.o(.text.clear_pin)
    __arm_cp.7_1                             0x0000294c   Number         4  gpio.o(.text.clear_pin)
    __arm_cp.7_2                             0x00002950   Number         4  gpio.o(.text.clear_pin)
    __arm_cp.7_3                             0x00002954   Number         4  gpio.o(.text.clear_pin)
    __arm_cp.7_4                             0x00002958   Number         4  gpio.o(.text.clear_pin)
    [Anonymous Symbol]                       0x0000295c   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x000029a8   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x000029ac   Section        0  rtx_evflags.o(.text.osEventFlagsNew)
    __arm_cp.0_0                             0x000029cc   Number         4  rtx_evflags.o(.text.osEventFlagsNew)
    [Anonymous Symbol]                       0x000029d0   Section        0  rtx_evflags.o(.text.osEventFlagsSet)
    __arm_cp.2_0                             0x00002a18   Number         4  rtx_evflags.o(.text.osEventFlagsSet)
    [Anonymous Symbol]                       0x00002a1c   Section        0  rtx_evflags.o(.text.osEventFlagsWait)
    __arm_cp.7_0                             0x00002a5c   Number         4  rtx_evflags.o(.text.osEventFlagsWait)
    [Anonymous Symbol]                       0x00002a60   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x00002a88   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x00002a8c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00002a90   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x00002ab4   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00002ab8   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x00002ad8   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00002adc   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x00002b4c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00002b50   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x00002bc0   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00002bc4   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x00002be8   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00002bec   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x00002c10   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00002c14   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x00002c34   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00002c38   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x00002c5c   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00002c60   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsPostProcess               0x00002ca1   Thumb Code    52  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x00002ca0   Section        0  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x00002cd4   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x00002cdc   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x00002ce4   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x00002ce6   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00002d5e   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00002dac   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00002dda   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00002e04   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00002e3a   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x00002e77   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00002e76   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00002f34   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x00002f54   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x00002f58   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00002f9c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x00002fe4   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00003064   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x000030cc   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphorePostProcess                0x000030d1   Thumb Code    36  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x000030d0   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxThreadBlock                         0x000030f5   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x000030f4   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x00003129   Thumb Code   140  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00003128   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x000031b5   Thumb Code    68  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x000031b4   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x000031f8   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x0000324d   Thumb Code    40  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x0000324c   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x00003274   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x000032c1   Thumb Code    80  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x000032c0   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.51_0                            0x00003310   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadJoinWakeup                    0x00003315   Thumb Code    32  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x00003314   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x00003334   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00003348   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x00003374   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x0000338c   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x000033b1   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000033b0   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000033d8   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x000033ec   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x000033f4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_0                            0x0000342c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_1                            0x00003430   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00003434   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x00003440   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00003444   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x00003480   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00003484   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x000034a8   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00003524   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00003528   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x00003544   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x00003548   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x0000354c   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x00003569   Thumb Code   112  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00003568   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x000035d8   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x000035dc   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    __arm_cp.2_0                             0x0000361c   Number         4  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x00003620   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    __arm_cp.0_0                             0x00003640   Number         4  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x00003644   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    __arm_cp.3_0                             0x0000368c   Number         4  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x00003690   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x00003698   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x0000369c   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.18_0                            0x000036bc   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.18_1                            0x000036c0   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x000036c4   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.16_0                            0x000036e4   Number         4  rtx_thread.o(.text.osThreadNew)
    os_kernel_is_active                      0x000036e9   Thumb Code    40  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x000036e8   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    __arm_cp.2_0                             0x00003710   Number         4  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x00003714   Section        0  port.o(.text.ports_HWconfig)
    [Anonymous Symbol]                       0x00003720   Section        0  port.o(.text.ports_IRQconfig)
    [Anonymous Symbol]                       0x00003728   Section        0  gpio.o(.text.read_input_pin)
    __arm_cp.9_0                             0x000037bc   Number         4  gpio.o(.text.read_input_pin)
    __arm_cp.9_1                             0x000037c0   Number         4  gpio.o(.text.read_input_pin)
    __arm_cp.9_2                             0x000037c4   Number         4  gpio.o(.text.read_input_pin)
    __arm_cp.9_3                             0x000037c8   Number         4  gpio.o(.text.read_input_pin)
    __arm_cp.9_4                             0x000037cc   Number         4  gpio.o(.text.read_input_pin)
    [Anonymous Symbol]                       0x000037d0   Section        0  gpio.o(.text.set_pin)
    __arm_cp.3_0                             0x0000385c   Number         4  gpio.o(.text.set_pin)
    __arm_cp.3_1                             0x00003860   Number         4  gpio.o(.text.set_pin)
    __arm_cp.3_2                             0x00003864   Number         4  gpio.o(.text.set_pin)
    __arm_cp.3_3                             0x00003868   Number         4  gpio.o(.text.set_pin)
    __arm_cp.3_4                             0x0000386c   Number         4  gpio.o(.text.set_pin)
    svcRtxEventFlagsNew                      0x00003871   Thumb Code   108  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    [Anonymous Symbol]                       0x00003870   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.9_0                             0x000038dc   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.9_1                             0x000038e0   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    svcRtxEventFlagsSet                      0x000038e5   Thumb Code   118  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    [Anonymous Symbol]                       0x000038e4   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    svcRtxEventFlagsWait                     0x0000395d   Thumb Code    92  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    [Anonymous Symbol]                       0x0000395c   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    svcRtxKernelGetState                     0x000039b9   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x000039b8   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x000039c0   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x000039c5   Thumb Code   308  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x000039c4   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x00003af8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x00003afd   Thumb Code   116  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x00003afc   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x00003b70   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x00003b74   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x00003b78   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x00003b7d   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00003b7c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x00003c44   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x00003c49   Thumb Code   428  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00003c48   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x00003df4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x00003df8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_2                             0x00003dfc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_3                             0x00003e00   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_5                             0x00003e04   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x00003e09   Thumb Code   172  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00003e08   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.20_0                            0x00003eb4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x00003eb9   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00003eb8   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x00003f4d   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00003f4c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x00003ffc   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x00004001   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00004000   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x0000406c   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x00004071   Thumb Code   184  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00004070   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x00004128   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxSemaphoreAcquire                   0x0000412d   Thumb Code    72  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x0000412c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    __arm_cp.11_0                            0x00004174   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreNew                       0x00004179   Thumb Code   124  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x00004178   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_1                             0x000041f4   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x000041f9   Thumb Code    56  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x000041f8   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x00004231   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00004230   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x00004279   Thumb Code     8  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x00004278   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.19_0                            0x00004280   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x00004285   Thumb Code   484  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x00004284   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_0                            0x00004468   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_1                            0x0000446c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_2                            0x00004470   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_3                            0x00004474   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_4                            0x00004478   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_5                            0x0000447c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.__kernel_poly                          0x00004480   Section        0  poly.o(i.__kernel_poly)
    i.__mathlib_dbl_divzero                  0x0000452c   Section        0  dunder.o(i.__mathlib_dbl_divzero)
    i.__mathlib_dbl_infnan                   0x00004540   Section        0  dunder.o(i.__mathlib_dbl_infnan)
    i.__mathlib_dbl_invalid                  0x0000454a   Section        0  dunder.o(i.__mathlib_dbl_invalid)
    i._fgeq                                  0x0000455a   Section        0  fcmp.o(i._fgeq)
    i._fleq                                  0x00004570   Section        0  fcmp.o(i._fleq)
    i._fls                                   0x0000458a   Section        0  fcmp.o(i._fls)
    i.log                                    0x000045a0   Section        0  log.o(i.log)
    x$fpl$deqf                               0x000048f4   Section      100  deqf.o(x$fpl$deqf)
    x$fpl$fadd                               0x00004958   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x00004965   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$fgeqf                              0x000049e4   Section       84  fgef.o(x$fpl$fgeqf)
    x$fpl$fleqf                              0x00004a38   Section       84  flef.o(x$fpl$fleqf)
    x$fpl$fmul                               0x00004a8c   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$fsub                               0x00004b3c   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x00004b49   Thumb Code     0  faddsub.o(x$fpl$fsub)
    ddiv_reciptbl                            0x00004c0c   Data         128  ddiv.o(.constdata)
    .constdata                               0x00004c0c   Section      128  ddiv.o(.constdata)
    x$fpl$usenofp                            0x00004c0c   Section        0  usenofp.o(x$fpl$usenofp)
    fdiv_tab                                 0x00004c8c   Data          64  fdiv.o(.constdata)
    .constdata                               0x00004c8c   Section       64  fdiv.o(.constdata)
    Lg2                                      0x00004cd0   Data          24  log.o(.constdata)
    .constdata                               0x00004cd0   Section       56  log.o(.constdata)
    Lg                                       0x00004ce8   Data          32  log.o(.constdata)
    .constdata                               0x00004d08   Section        8  qnan.o(.constdata)
    __tagsym$$used.4                         0x00004d10   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x00004d80   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00004db8   Section        0  threads.o(.rodata..L__const.Thread_Prepare_Msg.message)
    os_idle_thread_attr                      0x00004df0   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x00004df0   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x00004e14   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x00004e14   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x00004e2c   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x00004e2c   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x00004e50   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss                                     0x1ffff0b0   Section       96  libspace.o(.bss)
    os_isr_queue                             0x1ffff168   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x1ffff168   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x1ffff1a8   Data        4096  rtx_lib.o(.bss.os)
    PendST                                   0x200001a8   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x200001a8   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x200001ac   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x200001ac   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x200001bc   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x2000039c   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x2000039c   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x200003d0   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x200003d0   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20000420   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20000420   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20000464   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200004a8   Data         200  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x200004a8   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20000570   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20000570   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20000770   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20000770   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x20000778   Data           0  startup_mkl25z4.o(HEAP)
    Stack_Mem                                0x20000778   Data         256  startup_mkl25z4.o(STACK)
    HEAP                                     0x20000778   Section        0  startup_mkl25z4.o(HEAP)
    STACK                                    0x20000778   Section      256  startup_mkl25z4.o(STACK)
    __initial_sp                             0x20000878   Data           0  startup_mkl25z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mkl25z4.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mkl25z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mkl25z4.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0000013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000145   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0000014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x00000153   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x00000157   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000157   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000015f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000161   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000161   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000165   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x0000016d   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x0000016d   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x000001a5   Thumb Code    12  startup_mkl25z4.o(.text)
    NMI_Handler                              0x000001b1   Thumb Code     2  startup_mkl25z4.o(.text)
    HardFault_Handler                        0x000001b3   Thumb Code     2  startup_mkl25z4.o(.text)
    CMP0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    DAC0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA1_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA2_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA3_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    DefaultISR                               0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    FTFA_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C1_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    LLWU_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    LPTMR0_IRQHandler                        0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    LVD_LVW_IRQHandler                       0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    MCG_IRQHandler                           0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTD_IRQHandler                         0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_IRQHandler                           0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_Seconds_IRQHandler                   0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved20_IRQHandler                    0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved39_IRQHandler                    0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved45_IRQHandler                    0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI1_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM1_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM2_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    TSI0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    UART1_IRQHandler                         0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    UART2_IRQHandler                         0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    USB0_IRQHandler                          0x000001bb   Thumb Code     0  startup_mkl25z4.o(.text)
    __user_initial_stackheap                 0x000001c1   Thumb Code     0  startup_mkl25z4.o(.text)
    SVC_Handler                              0x000001e5   Thumb Code   132  irq_armv6m.o(.text)
    PendSV_Handler                           0x00000269   Thumb Code    12  irq_armv6m.o(.text)
    SysTick_Handler                          0x00000275   Thumb Code    12  irq_armv6m.o(.text)
    __aeabi_memcpy                           0x00000289   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x00000289   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x0000030b   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x00000325   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x00000343   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x00000343   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x00000347   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x00000347   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x00000347   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x0000034b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000034d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000034f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_d2f                              0x00000351   Thumb Code     0  d2f.o(.text)
    _d2f                                     0x00000351   Thumb Code   120  d2f.o(.text)
    __read_errno                             0x000003cd   Thumb Code    10  _rserrno.o(.text)
    __set_errno                              0x000003d7   Thumb Code    12  _rserrno.o(.text)
    __aeabi_errno_addr                       0x000003e3   Thumb Code     8  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x000003e3   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x000003e3   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __user_libspace                          0x000003ed   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000003ed   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000003f5   Thumb Code     8  sys_exit.o(.text)
    __aeabi_uidiv                            0x00000411   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x00000411   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x00000425   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x00000425   Thumb Code   338  aeabi_sdiv.o(.text)
    __aeabi_dadd                             0x00000875   Thumb Code     0  daddsub.o(.text)
    _dadd                                    0x00000875   Thumb Code    26  daddsub.o(.text)
    __aeabi_dsub                             0x0000088f   Thumb Code     0  daddsub.o(.text)
    _dsub                                    0x0000088f   Thumb Code    22  daddsub.o(.text)
    __aeabi_drsub                            0x000008a5   Thumb Code     0  daddsub.o(.text)
    _drsb                                    0x000008a5   Thumb Code    28  daddsub.o(.text)
    __aeabi_ddiv                             0x000008d5   Thumb Code     0  ddiv.o(.text)
    _ddiv                                    0x000008d5   Thumb Code  1072  ddiv.o(.text)
    _drdiv                                   0x00000d05   Thumb Code    20  ddiv.o(.text)
    __aeabi_d2iz                             0x00000d1d   Thumb Code     0  dfixi.o(.text)
    _dfix                                    0x00000d1d   Thumb Code    98  dfixi.o(.text)
    __aeabi_i2d_normalise                    0x00000d89   Thumb Code    66  dflti.o(.text)
    __aeabi_i2d                              0x00000dcb   Thumb Code    16  dflti.o(.text)
    _dflt                                    0x00000dcb   Thumb Code     0  dflti.o(.text)
    __aeabi_ui2d                             0x00000ddb   Thumb Code     6  dflti.o(.text)
    _dfltu                                   0x00000ddb   Thumb Code     0  dflti.o(.text)
    __aeabi_f2d                              0x00000de1   Thumb Code     0  f2d.o(.text)
    _f2d                                     0x00000de1   Thumb Code    80  f2d.o(.text)
    __aeabi_fdiv                             0x00000e35   Thumb Code     0  fdiv.o(.text)
    _fdiv                                    0x00000e35   Thumb Code   334  fdiv.o(.text)
    _frdiv                                   0x00000f83   Thumb Code     8  fdiv.o(.text)
    __aeabi_f2iz                             0x00000f95   Thumb Code     0  ffixi.o(.text)
    _ffix                                    0x00000f95   Thumb Code    76  ffixi.o(.text)
    __aeabi_i2f_normalise                    0x00000fe1   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x00001029   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x00001029   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x00001039   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x00001039   Thumb Code     0  fflti.o(.text)
    __aeabi_dmul                             0x00001041   Thumb Code     0  dmul.o(.text)
    _dmul                                    0x00001041   Thumb Code   558  dmul.o(.text)
    __ARM_scalbn                             0x00001289   Thumb Code    84  dscalbn.o(.text)
    __fpl_dcmp_InfNaN                        0x000012e9   Thumb Code   154  dcmpin.o(.text)
    __fpl_fcmp_InfNaN                        0x00001389   Thumb Code    96  fcmpin.o(.text)
    __user_setup_stackheap                   0x000013ed   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x0000142b   Thumb Code    16  exit.o(.text)
    __fpl_cmpreturn                          0x0000143b   Thumb Code    46  cmpret.o(.text)
    __fpl_dcheck_NaN2                        0x00001469   Thumb Code    14  dnan2.o(.text)
    __fpl_fcheck_NaN2                        0x0000147d   Thumb Code    10  fnan2.o(.text)
    __fpl_return_NaN                         0x0000148d   Thumb Code    94  retnan.o(.text)
    __I$use$semihosting                      0x000014eb   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000014eb   Thumb Code     2  use_no_semi.o(.text)
    ADC0_IRQHandler                          0x000014ed   Thumb Code    24  adc.o(.text.ADC0_IRQHandler)
    __semihosting_library_function           0x000014ed   Thumb Code     0  indicate_semi.o(.text)
    ADC_HWconfig                             0x00001511   Thumb Code   260  adc.o(.text.ADC_HWconfig)
    ADC_IRQconfig                            0x00001635   Thumb Code    30  adc.o(.text.ADC_IRQconfig)
    GPIOA_HWconfig                           0x0000169d   Thumb Code    12  gpio.o(.text.GPIOA_HWconfig)
    GPIOB_HWconfig                           0x000016ad   Thumb Code    24  gpio.o(.text.GPIOB_HWconfig)
    GPIO_HWconfig                            0x000016c9   Thumb Code    12  gpio.o(.text.GPIO_HWconfig)
    OS_Tick_AcknowledgeIRQ                   0x00001795   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0000179d   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x000017c1   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x000017c9   Thumb Code    60  os_systick.o(.text.OS_Tick_Setup)
    PIT_HWconfig                             0x00001815   Thumb Code    88  pit.o(.text.PIT_HWconfig)
    PIT_IRQHandler                           0x00001879   Thumb Code    52  pit.o(.text.PIT_IRQHandler)
    PIT_IRQconfig                            0x000018b5   Thumb Code    30  pit.o(.text.PIT_IRQconfig)
    PIT_enabled                              0x000018d5   Thumb Code    24  pit.o(.text.PIT_enabled)
    PIT_start                                0x000018ed   Thumb Code    24  pit.o(.text.PIT_start)
    PIT_stop                                 0x00001905   Thumb Code    24  pit.o(.text.PIT_stop)
    PORTA_HWconfig                           0x00001921   Thumb Code    72  port.o(.text.PORTA_HWconfig)
    PORTA_IRQHandler                         0x00001975   Thumb Code    80  port.o(.text.PORTA_IRQHandler)
    PORTA_IRQconfig                          0x000019c9   Thumb Code    30  port.o(.text.PORTA_IRQconfig)
    PORTB_HWconfig                           0x000019e9   Thumb Code    36  port.o(.text.PORTB_HWconfig)
    RTOS_objects_config                      0x00001a15   Thumb Code    96  threads.o(.text.RTOS_objects_config)
    SystemInit                               0x00001ad5   Thumb Code   256  system_mkl25z4.o(.text.SystemInit)
    Thread_Convert_Temp                      0x00001c71   Thumb Code   224  threads.o(.text.Thread_Convert_Temp)
    Thread_Prepare_Msg                       0x00001d95   Thumb Code   388  threads.o(.text.Thread_Prepare_Msg)
    Thread_Transmit_Msg                      0x00001f25   Thumb Code    76  threads.o(.text.Thread_Transmit_Msg)
    UART0_HWconfig                           0x00001fc1   Thumb Code   492  uart0.o(.text.UART0_HWconfig)
    UART0_IRQHandler                         0x000021d9   Thumb Code   228  uart0.o(.text.UART0_IRQHandler)
    UART0_IRQconfig                          0x000022c5   Thumb Code    30  uart0.o(.text.UART0_IRQconfig)
    UART0_RED                                0x000022e5   Thumb Code    44  uart0.o(.text.UART0_RED)
    UART0_TED                                0x00002311   Thumb Code    44  uart0.o(.text.UART0_TED)
    UART0_TIE                                0x0000233d   Thumb Code    40  uart0.o(.text.UART0_TIE)
    UART0_TIED                               0x00002365   Thumb Code    44  uart0.o(.text.UART0_TIED)
    UART_TXQ_Empty                           0x00002395   Thumb Code    36  uart0.o(.text.UART_TXQ_Empty)
    UART_TXQ_Full                            0x000023b9   Thumb Code    36  uart0.o(.text.UART_TXQ_Full)
    UART_TX_Dequeque                         0x000023dd   Thumb Code    52  uart0.o(.text.UART_TX_Dequeque)
    UART_TX_Enqueque                         0x00002415   Thumb Code    68  uart0.o(.text.UART_TX_Enqueque)
    __user_perthread_libspace                0x000027a5   Thumb Code   128  rtx_lib.o(.text.__user_perthread_libspace)
    _mutex_acquire                           0x0000282d   Thumb Code    34  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x0000284f   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x00002861   Thumb Code    52  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x00002895   Thumb Code    30  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x000028b3   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    clear_pin                                0x000028bd   Thumb Code   140  gpio.o(.text.clear_pin)
    main                                     0x0000295d   Thumb Code    76  main.o(.text.main)
    osEventFlagsNew                          0x000029ad   Thumb Code    32  rtx_evflags.o(.text.osEventFlagsNew)
    osEventFlagsSet                          0x000029d1   Thumb Code    72  rtx_evflags.o(.text.osEventFlagsSet)
    osEventFlagsWait                         0x00002a1d   Thumb Code    64  rtx_evflags.o(.text.osEventFlagsWait)
    osKernelGetState                         0x00002a61   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x00002a91   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00002ab9   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00002add   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x00002b51   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00002bc5   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00002bed   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00002c15   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00002c39   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x00002c61   Thumb Code    64  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x00002cd5   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x00002cdd   Thumb Code     8  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x00002ce5   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x00002ce7   Thumb Code   120  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00002d5f   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00002dad   Thumb Code    46  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00002ddb   Thumb Code    42  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00002e05   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00002e3b   Thumb Code    60  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x00002f35   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x00002f59   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x00002f9d   Thumb Code    70  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x00002fe5   Thumb Code   128  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00003065   Thumb Code   104  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x000031f9   Thumb Code    84  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00003275   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x00003335   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00003349   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x00003375   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0000338d   Thumb Code    36  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x000033d9   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x000033ed   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x000033f5   Thumb Code    56  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00003435   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00003445   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00003485   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x000034a9   Thumb Code   124  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x00003529   Thumb Code    28  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x0000354d   Thumb Code    28  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x000035dd   Thumb Code    64  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x00003621   Thumb Code    32  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x00003645   Thumb Code    72  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x00003691   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x0000369d   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x000036c5   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    ports_HWconfig                           0x00003715   Thumb Code    12  port.o(.text.ports_HWconfig)
    ports_IRQconfig                          0x00003721   Thumb Code     8  port.o(.text.ports_IRQconfig)
    read_input_pin                           0x00003729   Thumb Code   148  gpio.o(.text.read_input_pin)
    set_pin                                  0x000037d1   Thumb Code   140  gpio.o(.text.set_pin)
    __kernel_poly                            0x00004481   Thumb Code   172  poly.o(i.__kernel_poly)
    __mathlib_dbl_divzero                    0x0000452d   Thumb Code    16  dunder.o(i.__mathlib_dbl_divzero)
    __mathlib_dbl_infnan                     0x00004541   Thumb Code    10  dunder.o(i.__mathlib_dbl_infnan)
    __mathlib_dbl_invalid                    0x0000454b   Thumb Code    16  dunder.o(i.__mathlib_dbl_invalid)
    __aeabi_fcmpge                           0x0000455b   Thumb Code     0  fcmp.o(i._fgeq)
    _fgeq                                    0x0000455b   Thumb Code    22  fcmp.o(i._fgeq)
    __aeabi_fcmple                           0x00004571   Thumb Code     0  fcmp.o(i._fleq)
    _fleq                                    0x00004571   Thumb Code    26  fcmp.o(i._fleq)
    __aeabi_fcmplt                           0x0000458b   Thumb Code     0  fcmp.o(i._fls)
    _fls                                     0x0000458b   Thumb Code    22  fcmp.o(i._fls)
    log                                      0x000045a1   Thumb Code   790  log.o(i.log)
    __aeabi_cdcmpeq                          0x000048f5   Thumb Code     0  deqf.o(x$fpl$deqf)
    _dcmpeq                                  0x000048f5   Thumb Code    94  deqf.o(x$fpl$deqf)
    __aeabi_fadd                             0x00004959   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x00004959   Thumb Code   134  faddsub.o(x$fpl$fadd)
    _fcmpge                                  0x000049e5   Thumb Code    78  fgef.o(x$fpl$fgeqf)
    __aeabi_cfcmple                          0x00004a39   Thumb Code     0  flef.o(x$fpl$fleqf)
    _fcmple                                  0x00004a39   Thumb Code    78  flef.o(x$fpl$fleqf)
    __aeabi_fmul                             0x00004a8d   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x00004a8d   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_fsub                             0x00004b3d   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x00004b3d   Thumb Code   204  faddsub.o(x$fpl$fsub)
    __I$use$fp                               0x00004c0c   Number         0  usenofp.o(x$fpl$usenofp)
    __mathlib_zero                           0x00004d08   Data           8  qnan.o(.constdata)
    osRtxConfig                              0x00004d10   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x00004d80   Data          56  rtx_lib.o(.rodata)
    osRtxUserSVC                             0x00004dec   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x00004e5c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004e7c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x1ffff000   Data           4  system_mkl25z4.o(.data.SystemCoreClock)
    TXQ_size                                 0x1ffff004   Data           4  uart0.o(.data.TXQ_size)
    osRtxInfo                                0x1ffff008   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x1ffff0b0   Data          96  libspace.o(.bss)
    EventFlagId                              0x1ffff110   Data           4  threads.o(.bss.EventFlagId)
    __temporary_stack_top$libspace           0x1ffff110   Data           0  libspace.o(.bss)
    PrepMsgSemId                             0x1ffff114   Data           4  threads.o(.bss.PrepMsgSemId)
    R_Temp                                   0x1ffff118   Data           4  threads.o(.bss.R_Temp)
    SendMsgSemId                             0x1ffff11c   Data           4  threads.o(.bss.SendMsgSemId)
    TXQ_head                                 0x1ffff120   Data           4  uart0.o(.bss.TXQ_head)
    TXQ_tail                                 0x1ffff124   Data           4  uart0.o(.bss.TXQ_tail)
    TX_queque                                0x1ffff128   Data          32  uart0.o(.bss.TX_queque)
    TempF                                    0x1ffff148   Data           4  threads.o(.bss.TempF)
    TempK                                    0x1ffff14c   Data           4  threads.o(.bss.TempK)
    Tid_Convert_Temp                         0x1ffff150   Data           4  threads.o(.bss.Tid_Convert_Temp)
    Tid_Prepare_Msg                          0x1ffff154   Data           4  threads.o(.bss.Tid_Prepare_Msg)
    Tid_Transmit_Msg                         0x1ffff158   Data           4  threads.o(.bss.Tid_Transmit_Msg)
    V_Temp                                   0x1ffff15c   Data           4  threads.o(.bss.V_Temp)
    adc_result                               0x1ffff160   Data           4  adc.o(.bss.adc_result)
    neg_log_R_Temp                           0x1ffff164   Data           4  threads.o(.bss.neg_log_R_Temp)
    .bss.os.msgqueue.cb$$Base                0x2000039c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x200003d0   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20000420   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200004a8   Number         0  rtx_lib.o(.bss.os.thread.cb)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000001a5

  Load Region LR_1 (Base: 0x00000000, Size: 0x00004f28, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004e7c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          235    RESET               startup_mkl25z4.o
    0x000000c0   0x000000c0   0x00000008   Code   RO          801  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO         1072    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001a   Code   RO         1074    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0000011e   0x0000011e   0x00000002   PAD
    0x00000120   0x00000120   0x0000001c   Code   RO         1076    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0000013c   0x0000013c   0x00000002   Code   RO          928    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          945    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          947    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          949    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          952    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          954    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          956    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          959    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          961    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          963    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          965    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          967    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          969    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          971    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          973    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          975    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          977    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          979    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          983    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          985    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          987    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          989    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000002   Code   RO          990    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x00000140   0x00000140   0x00000002   Code   RO         1027    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1055    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1057    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1060    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1063    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1065    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO         1068    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000002   Code   RO         1069    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000144   0x00000144   0x00000000   Code   RO          848    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000144   0x00000144   0x00000000   Code   RO          886    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000144   0x00000144   0x00000006   Code   RO          898    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000014a   0x0000014a   0x00000008   Code   RO          887    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x00000152   0x00000152   0x00000004   Code   RO          889    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x00000156   0x00000156   0x00000000   Code   RO          891    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x00000156   0x00000156   0x00000008   Code   RO          892    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0000015e   0x0000015e   0x00000002   Code   RO          936    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x00000160   0x00000160   0x00000000   Code   RO          998    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x00000160   0x00000160   0x00000004   Code   RO          999    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000164   0x00000164   0x00000006   Code   RO         1000    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x0000016a   0x0000016a   0x00000002   PAD
    0x0000016c   0x0000016c   0x00000038   Code   RO          789    .emb_text           c_p.l(rt_memcpy.o)
    0x000001a4   0x000001a4   0x00000040   Code   RO          237  * .text               startup_mkl25z4.o
    0x000001e4   0x000001e4   0x000000a4   Code   RO          615    .text               RTX_CM0.lib(irq_armv6m.o)
    0x00000288   0x00000288   0x00000082   Code   RO          790    .text               c_p.l(rt_memcpy.o)
    0x0000030a   0x0000030a   0x00000040   Code   RO          793    .text               c_p.l(rt_memclr.o)
    0x0000034a   0x0000034a   0x00000006   Code   RO          799    .text               c_p.l(heapauxi.o)
    0x00000350   0x00000350   0x0000007c   Code   RO          803    .text               fz_ps.l(d2f.o)
    0x000003cc   0x000003cc   0x00000016   Code   RO          853    .text               c_p.l(_rserrno.o)
    0x000003e2   0x000003e2   0x00000008   Code   RO          907    .text               c_p.l(rt_errno_addr_twolibspace.o)
    0x000003ea   0x000003ea   0x00000002   PAD
    0x000003ec   0x000003ec   0x00000008   Code   RO          913    .text               c_p.l(libspace.o)
    0x000003f4   0x000003f4   0x0000000c   Code   RO          993    .text               c_p.l(sys_exit.o)
    0x00000400   0x00000400   0x00000010   Code   RO          236    .ARM.__at_0x400     startup_mkl25z4.o
    0x00000410   0x00000410   0x0000016c   Code   RO          795    .text               c_p.l(aeabi_sdiv.o)
    0x0000057c   0x0000057c   0x00000358   Code   RO          805    .text               fz_ps.l(daddsub.o)
    0x000008d4   0x000008d4   0x00000448   Code   RO          807    .text               fz_ps.l(ddiv.o)
    0x00000d1c   0x00000d1c   0x0000006c   Code   RO          810    .text               fz_ps.l(dfixi.o)
    0x00000d88   0x00000d88   0x00000058   Code   RO          812    .text               fz_ps.l(dflti.o)
    0x00000de0   0x00000de0   0x00000054   Code   RO          814    .text               fz_ps.l(f2d.o)
    0x00000e34   0x00000e34   0x00000160   Code   RO          834    .text               fz_ps.l(fdiv.o)
    0x00000f94   0x00000f94   0x0000004c   Code   RO          837    .text               fz_ps.l(ffixi.o)
    0x00000fe0   0x00000fe0   0x0000005e   Code   RO          839    .text               fz_ps.l(fflti.o)
    0x0000103e   0x0000103e   0x00000002   PAD
    0x00001040   0x00001040   0x00000248   Code   RO          857    .text               fz_ps.l(dmul.o)
    0x00001288   0x00001288   0x00000060   Code   RO          859    .text               fz_ps.l(dscalbn.o)
    0x000012e8   0x000012e8   0x000000a0   Code   RO          909    .text               fz_ps.l(dcmpin.o)
    0x00001388   0x00001388   0x00000064   Code   RO          911    .text               fz_ps.l(fcmpin.o)
    0x000013ec   0x000013ec   0x0000003e   Code   RO          916    .text               c_p.l(sys_stackheap_outer.o)
    0x0000142a   0x0000142a   0x00000010   Code   RO          919    .text               c_p.l(exit.o)
    0x0000143a   0x0000143a   0x0000002e   Code   RO          929    .text               fz_ps.l(cmpret.o)
    0x00001468   0x00001468   0x00000014   Code   RO          931    .text               fz_ps.l(dnan2.o)
    0x0000147c   0x0000147c   0x00000010   Code   RO          933    .text               fz_ps.l(fnan2.o)
    0x0000148c   0x0000148c   0x0000005e   Code   RO          991    .text               fz_ps.l(retnan.o)
    0x000014ea   0x000014ea   0x00000002   Code   RO         1016    .text               c_p.l(use_no_semi.o)
    0x000014ec   0x000014ec   0x00000000   Code   RO         1018    .text               c_p.l(indicate_semi.o)
    0x000014ec   0x000014ec   0x00000024   Code   RO           23    .text.ADC0_IRQHandler  adc.o
    0x00001510   0x00001510   0x00000124   Code   RO           11    .text.ADC_HWconfig  adc.o
    0x00001634   0x00001634   0x0000001e   Code   RO           15    .text.ADC_IRQconfig  adc.o
    0x00001652   0x00001652   0x0000004a   Code   RO          524    .text.EventFlagsCheck  RTX_CM0.lib(rtx_evflags.o)
    0x0000169c   0x0000169c   0x00000010   Code   RO           36    .text.GPIOA_HWconfig  gpio.o
    0x000016ac   0x000016ac   0x0000001c   Code   RO           38    .text.GPIOB_HWconfig  gpio.o
    0x000016c8   0x000016c8   0x0000000c   Code   RO           34    .text.GPIO_HWconfig  gpio.o
    0x000016d4   0x000016d4   0x00000042   Code   RO          731    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001716   0x00001716   0x0000005e   Code   RO          725    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001774   0x00001774   0x0000001e   Code   RO          723    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001792   0x00001792   0x00000002   PAD
    0x00001794   0x00001794   0x00000008   Code   RO          767    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x0000179c   0x0000179c   0x00000024   Code   RO          763    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x000017c0   0x000017c0   0x00000006   Code   RO          769    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x000017c6   0x000017c6   0x00000002   PAD
    0x000017c8   0x000017c8   0x0000004c   Code   RO          761    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x00001814   0x00001814   0x00000064   Code   RO           63    .text.PIT_HWconfig  pit.o
    0x00001878   0x00001878   0x0000003c   Code   RO           79    .text.PIT_IRQHandler  pit.o
    0x000018b4   0x000018b4   0x0000001e   Code   RO           65    .text.PIT_IRQconfig  pit.o
    0x000018d2   0x000018d2   0x00000002   PAD
    0x000018d4   0x000018d4   0x00000018   Code   RO           77    .text.PIT_enabled   pit.o
    0x000018ec   0x000018ec   0x00000018   Code   RO           73    .text.PIT_start     pit.o
    0x00001904   0x00001904   0x0000001c   Code   RO           75    .text.PIT_stop      pit.o
    0x00001920   0x00001920   0x00000054   Code   RO           92    .text.PORTA_HWconfig  port.o
    0x00001974   0x00001974   0x00000054   Code   RO          112    .text.PORTA_IRQHandler  port.o
    0x000019c8   0x000019c8   0x0000001e   Code   RO          102    .text.PORTA_IRQconfig  port.o
    0x000019e6   0x000019e6   0x00000002   PAD
    0x000019e8   0x000019e8   0x0000002c   Code   RO           94    .text.PORTB_HWconfig  port.o
    0x00001a14   0x00001a14   0x0000007c   Code   RO          121    .text.RTOS_objects_config  threads.o
    0x00001a90   0x00001a90   0x00000020   Code   RO          596    .text.SemaphoreTokenDecrement  RTX_CM0.lib(rtx_semaphore.o)
    0x00001ab0   0x00001ab0   0x00000022   Code   RO          602    .text.SemaphoreTokenIncrement  RTX_CM0.lib(rtx_semaphore.o)
    0x00001ad2   0x00001ad2   0x00000002   PAD
    0x00001ad4   0x00001ad4   0x00000150   Code   RO          246    .text.SystemInit    system_mkl25z4.o
    0x00001c24   0x00001c24   0x0000004a   Code   RO          404    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x00001c6e   0x00001c6e   0x00000002   PAD
    0x00001c70   0x00001c70   0x00000124   Code   RO          123    .text.Thread_Convert_Temp  threads.o
    0x00001d94   0x00001d94   0x00000190   Code   RO          125    .text.Thread_Prepare_Msg  threads.o
    0x00001f24   0x00001f24   0x00000050   Code   RO          127    .text.Thread_Transmit_Msg  threads.o
    0x00001f74   0x00001f74   0x0000004c   Code   RO          478    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x00001fc0   0x00001fc0   0x00000218   Code   RO          148    .text.UART0_HWconfig  uart0.o
    0x000021d8   0x000021d8   0x000000ec   Code   RO          174    .text.UART0_IRQHandler  uart0.o
    0x000022c4   0x000022c4   0x0000001e   Code   RO          166    .text.UART0_IRQconfig  uart0.o
    0x000022e2   0x000022e2   0x00000002   PAD
    0x000022e4   0x000022e4   0x0000002c   Code   RO          152    .text.UART0_RED     uart0.o
    0x00002310   0x00002310   0x0000002c   Code   RO          150    .text.UART0_TED     uart0.o
    0x0000233c   0x0000233c   0x00000028   Code   RO          156    .text.UART0_TIE     uart0.o
    0x00002364   0x00002364   0x00000030   Code   RO          154    .text.UART0_TIED    uart0.o
    0x00002394   0x00002394   0x00000024   Code   RO          162    .text.UART_TXQ_Empty  uart0.o
    0x000023b8   0x000023b8   0x00000024   Code   RO          164    .text.UART_TXQ_Full  uart0.o
    0x000023dc   0x000023dc   0x00000038   Code   RO          160    .text.UART_TX_Dequeque  uart0.o
    0x00002414   0x00002414   0x00000050   Code   RO          158    .text.UART_TX_Enqueque  uart0.o
    0x00002464   0x00002464   0x00000028   Code   RO           19    .text.__NVIC_ClearPendingIRQ  adc.o
    0x0000248c   0x0000248c   0x00000028   Code   RO           69    .text.__NVIC_ClearPendingIRQ  pit.o
    0x000024b4   0x000024b4   0x00000028   Code   RO          106    .text.__NVIC_ClearPendingIRQ  port.o
    0x000024dc   0x000024dc   0x0000002c   Code   RO          170    .text.__NVIC_ClearPendingIRQ  uart0.o
    0x00002508   0x00002508   0x00000028   Code   RO           21    .text.__NVIC_EnableIRQ  adc.o
    0x00002530   0x00002530   0x00000028   Code   RO           71    .text.__NVIC_EnableIRQ  pit.o
    0x00002558   0x00002558   0x00000028   Code   RO          108    .text.__NVIC_EnableIRQ  port.o
    0x00002580   0x00002580   0x0000002c   Code   RO          172    .text.__NVIC_EnableIRQ  uart0.o
    0x000025ac   0x000025ac   0x0000007c   Code   RO           17    .text.__NVIC_SetPriority  adc.o
    0x00002628   0x00002628   0x0000007c   Code   RO           67    .text.__NVIC_SetPriority  pit.o
    0x000026a4   0x000026a4   0x0000007c   Code   RO          104    .text.__NVIC_SetPriority  port.o
    0x00002720   0x00002720   0x00000084   Code   RO          168    .text.__NVIC_SetPriority  uart0.o
    0x000027a4   0x000027a4   0x00000088   Code   RO          189    .text.__user_perthread_libspace  rtx_lib.o
    0x0000282c   0x0000282c   0x00000022   Code   RO          195    .text._mutex_acquire  rtx_lib.o
    0x0000284e   0x0000284e   0x00000012   Code   RO          199    .text._mutex_free   rtx_lib.o
    0x00002860   0x00002860   0x00000034   Code   RO          193    .text._mutex_initialize  rtx_lib.o
    0x00002894   0x00002894   0x0000001e   Code   RO          197    .text._mutex_release  rtx_lib.o
    0x000028b2   0x000028b2   0x00000008   Code   RO          187    .text._platform_post_stackheap_init  rtx_lib.o
    0x000028ba   0x000028ba   0x00000002   PAD
    0x000028bc   0x000028bc   0x000000a0   Code   RO           48    .text.clear_pin     gpio.o
    0x0000295c   0x0000295c   0x00000050   Code   RO            2    .text.main          main.o
    0x000029ac   0x000029ac   0x00000024   Code   RO          502    .text.osEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x000029d0   0x000029d0   0x0000004c   Code   RO          506    .text.osEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x00002a1c   0x00002a1c   0x00000044   Code   RO          516    .text.osEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x00002a60   0x00002a60   0x00000030   Code   RO          268    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x00002a90   0x00002a90   0x00000028   Code   RO          262    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x00002ab8   0x00002ab8   0x00000024   Code   RO          272    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00002adc   0x00002adc   0x00000074   Code   RO          699    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002b50   0x00002b50   0x00000074   Code   RO          697    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002bc4   0x00002bc4   0x00000028   Code   RO          550    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00002bec   0x00002bec   0x00000028   Code   RO          556    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00002c14   0x00002c14   0x00000024   Code   RO          546    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x00002c38   0x00002c38   0x00000028   Code   RO          552    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00002c60   0x00002c60   0x00000040   Code   RO          225    .text.osRtxErrorNotify  rtx_config.o
    0x00002ca0   0x00002ca0   0x00000034   Code   RO          522    .text.osRtxEventFlagsPostProcess  RTX_CM0.lib(rtx_evflags.o)
    0x00002cd4   0x00002cd4   0x00000008   Code   RO          223    .text.osRtxIdleThread  rtx_config.o
    0x00002cdc   0x00002cdc   0x00000008   Code   RO          260    .text.osRtxKernelErrorNotify  RTX_CM0.lib(rtx_kernel.o)
    0x00002ce4   0x00002ce4   0x00000002   Code   RO          258    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x00002ce6   0x00002ce6   0x00000078   Code   RO          625    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x00002d5e   0x00002d5e   0x0000004e   Code   RO          627    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x00002dac   0x00002dac   0x0000002e   Code   RO          623    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x00002dda   0x00002dda   0x0000002a   Code   RO          639    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x00002e04   0x00002e04   0x00000036   Code   RO          641    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x00002e3a   0x00002e3a   0x0000003c   Code   RO          637    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x00002e76   0x00002e76   0x000000bc   Code   RO          721    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002f32   0x00002f32   0x00000002   PAD
    0x00002f34   0x00002f34   0x00000024   Code   RO          689    .text.osRtxMessageQueueTimerSetup  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002f58   0x00002f58   0x00000044   Code   RO          542    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00002f9c   0x00002f9c   0x00000046   Code   RO          544    .text.osRtxMutexOwnerRestore  RTX_CM0.lib(rtx_mutex.o)
    0x00002fe2   0x00002fe2   0x00000002   PAD
    0x00002fe4   0x00002fe4   0x00000080   Code   RO          749    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x00003064   0x00003064   0x0000006c   Code   RO          751    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x000030d0   0x000030d0   0x00000024   Code   RO          594    .text.osRtxSemaphorePostProcess  RTX_CM0.lib(rtx_semaphore.o)
    0x000030f4   0x000030f4   0x00000034   Code   RO          344    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x00003128   0x00003128   0x0000008c   Code   RO          352    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x000031b4   0x000031b4   0x00000044   Code   RO          348    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x000031f8   0x000031f8   0x00000054   Code   RO          336    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x0000324c   0x0000324c   0x00000028   Code   RO          436    .text.osRtxThreadDestroy  RTX_CM0.lib(rtx_thread.o)
    0x00003274   0x00003274   0x0000004c   Code   RO          342    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x000032c0   0x000032c0   0x00000054   Code   RO          428    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x00003314   0x00003314   0x00000020   Code   RO          434    .text.osRtxThreadJoinWakeup  RTX_CM0.lib(rtx_thread.o)
    0x00003334   0x00003334   0x00000014   Code   RO          328    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x00003348   0x00003348   0x0000002c   Code   RO          326    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x00003374   0x00003374   0x00000018   Code   RO          332    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x0000338c   0x0000338c   0x00000024   Code   RO          330    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x000033b0   0x000033b0   0x00000026   Code   RO          402    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x000033d6   0x000033d6   0x00000002   PAD
    0x000033d8   0x000033d8   0x00000014   Code   RO          334    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x000033ec   0x000033ec   0x00000006   Code   RO          338    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x000033f2   0x000033f2   0x00000002   PAD
    0x000033f4   0x000033f4   0x00000040   Code   RO          354    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x00003434   0x00003434   0x00000010   Code   RO          340    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x00003444   0x00003444   0x00000040   Code   RO          350    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x00003484   0x00003484   0x00000022   Code   RO          346    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x000034a6   0x000034a6   0x00000002   PAD
    0x000034a8   0x000034a8   0x00000080   Code   RO          747    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x00003528   0x00003528   0x00000024   Code   RO          460    .text.osRtxTimerSetup  RTX_CM0.lib(rtx_timer.o)
    0x0000354c   0x0000354c   0x0000001c   Code   RO          464    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x00003568   0x00003568   0x00000074   Code   RO          462    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x000035dc   0x000035dc   0x00000044   Code   RO          582    .text.osSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x00003620   0x00003620   0x00000024   Code   RO          578    .text.osSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x00003644   0x00003644   0x0000004c   Code   RO          584    .text.osSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x00003690   0x00003690   0x0000000c   Code   RO          386    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x0000369c   0x0000369c   0x00000028   Code   RO          362    .text.osThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x000036c4   0x000036c4   0x00000024   Code   RO          358    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x000036e8   0x000036e8   0x0000002c   Code   RO          191    .text.os_kernel_is_active  rtx_lib.o
    0x00003714   0x00003714   0x0000000c   Code   RO           88    .text.ports_HWconfig  port.o
    0x00003720   0x00003720   0x00000008   Code   RO           90    .text.ports_IRQconfig  port.o
    0x00003728   0x00003728   0x000000a8   Code   RO           52    .text.read_input_pin  gpio.o
    0x000037d0   0x000037d0   0x000000a0   Code   RO           40    .text.set_pin       gpio.o
    0x00003870   0x00003870   0x00000074   Code   RO          520    .text.svcRtxEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x000038e4   0x000038e4   0x00000076   Code   RO          528    .text.svcRtxEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x0000395a   0x0000395a   0x00000002   PAD
    0x0000395c   0x0000395c   0x0000005c   Code   RO          530    .text.svcRtxEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x000039b8   0x000039b8   0x0000000c   Code   RO          270    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x000039c4   0x000039c4   0x00000138   Code   RO          300    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x00003afc   0x00003afc   0x00000080   Code   RO          302    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00003b7c   0x00003b7c   0x000000cc   Code   RO          733    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00003c48   0x00003c48   0x000001c0   Code   RO          691    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00003e08   0x00003e08   0x000000b0   Code   RO          729    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00003eb8   0x00003eb8   0x00000094   Code   RO          562    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00003f4c   0x00003f4c   0x000000b4   Code   RO          568    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00004000   0x00004000   0x00000070   Code   RO          558    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x00004070   0x00004070   0x000000bc   Code   RO          564    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x0000412c   0x0000412c   0x0000004c   Code   RO          600    .text.svcRtxSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x00004178   0x00004178   0x00000080   Code   RO          592    .text.svcRtxSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x000041f8   0x000041f8   0x00000038   Code   RO          604    .text.svcRtxSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x00004230   0x00004230   0x00000048   Code   RO          432    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00004278   0x00004278   0x0000000c   Code   RO          364    .text.svcRtxThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x00004284   0x00004284   0x000001fc   Code   RO          356    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x00004480   0x00004480   0x000000ac   Code   RO          882    i.__kernel_poly     m_ps.l(poly.o)
    0x0000452c   0x0000452c   0x00000014   Code   RO          868    i.__mathlib_dbl_divzero  m_ps.l(dunder.o)
    0x00004540   0x00004540   0x0000000a   Code   RO          869    i.__mathlib_dbl_infnan  m_ps.l(dunder.o)
    0x0000454a   0x0000454a   0x00000010   Code   RO          871    i.__mathlib_dbl_invalid  m_ps.l(dunder.o)
    0x0000455a   0x0000455a   0x00000016   Code   RO          823    i._fgeq             fz_ps.l(fcmp.o)
    0x00004570   0x00004570   0x0000001a   Code   RO          825    i._fleq             fz_ps.l(fcmp.o)
    0x0000458a   0x0000458a   0x00000016   Code   RO          826    i._fls              fz_ps.l(fcmp.o)
    0x000045a0   0x000045a0   0x00000354   Code   RO          844    i.log               m_ps.l(log.o)
    0x000048f4   0x000048f4   0x00000064   Code   RO          855    x$fpl$deqf          fz_ps.l(deqf.o)
    0x00004958   0x00004958   0x0000008c   Code   RO          816    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x000049e4   0x000049e4   0x00000054   Code   RO          863    x$fpl$fgeqf         fz_ps.l(fgef.o)
    0x00004a38   0x00004a38   0x00000054   Code   RO          865    x$fpl$fleqf         fz_ps.l(flef.o)
    0x00004a8c   0x00004a8c   0x000000b0   Code   RO          841    x$fpl$fmul          fz_ps.l(fmul.o)
    0x00004b3c   0x00004b3c   0x000000d0   Code   RO          818    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x00004c0c   0x00004c0c   0x00000000   Code   RO          867    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x00004c0c   0x00004c0c   0x00000080   Data   RO          808    .constdata          fz_ps.l(ddiv.o)
    0x00004c8c   0x00004c8c   0x00000040   Data   RO          835    .constdata          fz_ps.l(fdiv.o)
    0x00004ccc   0x00004ccc   0x00000004   PAD
    0x00004cd0   0x00004cd0   0x00000038   Data   RO          845    .constdata          m_ps.l(log.o)
    0x00004d08   0x00004d08   0x00000008   Data   RO          884    .constdata          m_ps.l(qnan.o)
    0x00004d10   0x00004d10   0x00000070   Data   RO          205    .rodata             rtx_lib.o
    0x00004d80   0x00004d80   0x00000038   Data   RO          208    .rodata             rtx_lib.o
    0x00004db8   0x00004db8   0x00000032   Data   RO          140    .rodata..L__const.Thread_Prepare_Msg.message  threads.o
    0x00004dea   0x00004dea   0x00000002   PAD
    0x00004dec   0x00004dec   0x00000004   Data   RO          207    .rodata.osRtxUserSVC  rtx_lib.o
    0x00004df0   0x00004df0   0x00000024   Data   RO          202    .rodata.os_idle_thread_attr  rtx_lib.o
    0x00004e14   0x00004e14   0x00000018   Data   RO          204    .rodata.os_timer_mq_attr  rtx_lib.o
    0x00004e2c   0x00004e2c   0x00000024   Data   RO          203    .rodata.os_timer_thread_attr  rtx_lib.o
    0x00004e50   0x00004e50   0x0000000b   Data   RO          316    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x00004e5b   0x00004e5b   0x00000001   PAD
    0x00004e5c   0x00004e5c   0x00000020   Data   RO         1071    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x1ffff000, Load base: 0x00004e7c, Size: 0x000000ac, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   0x00004e7c   0x00000004   Data   RW          250    .data.SystemCoreClock  system_mkl25z4.o
    0x1ffff004   0x00004e80   0x00000004   Data   RW          178    .data.TXQ_size      uart0.o
    0x1ffff008   0x00004e84   0x000000a4   Data   RW          317    .data.os            RTX_CM0.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x1ffff0b0, Load base: 0x00004f28, Size: 0x000017c8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff0b0        -       0x00000060   Zero   RW          914    .bss                c_p.l(libspace.o)
    0x1ffff110        -       0x00000004   Zero   RW          132    .bss.EventFlagId    threads.o
    0x1ffff114        -       0x00000004   Zero   RW          133    .bss.PrepMsgSemId   threads.o
    0x1ffff118        -       0x00000004   Zero   RW          136    .bss.R_Temp         threads.o
    0x1ffff11c        -       0x00000004   Zero   RW          134    .bss.SendMsgSemId   threads.o
    0x1ffff120        -       0x00000004   Zero   RW          176    .bss.TXQ_head       uart0.o
    0x1ffff124        -       0x00000004   Zero   RW          177    .bss.TXQ_tail       uart0.o
    0x1ffff128        -       0x00000020   Zero   RW          179    .bss.TX_queque      uart0.o
    0x1ffff148        -       0x00000004   Zero   RW          139    .bss.TempF          threads.o
    0x1ffff14c        -       0x00000004   Zero   RW          138    .bss.TempK          threads.o
    0x1ffff150        -       0x00000004   Zero   RW          129    .bss.Tid_Convert_Temp  threads.o
    0x1ffff154        -       0x00000004   Zero   RW          130    .bss.Tid_Prepare_Msg  threads.o
    0x1ffff158        -       0x00000004   Zero   RW          131    .bss.Tid_Transmit_Msg  threads.o
    0x1ffff15c        -       0x00000004   Zero   RW          135    .bss.V_Temp         threads.o
    0x1ffff160        -       0x00000004   Zero   RW           25    .bss.adc_result     adc.o
    0x1ffff164        -       0x00000004   Zero   RW          137    .bss.neg_log_R_Temp  threads.o
    0x1ffff168        -       0x00001040   Zero   RW          201    .bss.os             rtx_lib.o
    0x200001a8        -       0x00000001   Zero   RW          779    .bss.os             RTX_CM0.lib(os_systick.o)
    0x200001a9   0x00004f28   0x00000003   PAD
    0x200001ac        -       0x000001f0   Zero   RW          209    .bss.os.libspace    rtx_lib.o
    0x2000039c        -       0x00000034   Zero   RW          213    .bss.os.msgqueue.cb  rtx_lib.o
    0x200003d0        -       0x00000050   Zero   RW          214    .bss.os.msgqueue.mem  rtx_lib.o
    0x20000420        -       0x00000088   Zero   RW          210    .bss.os.thread.cb   rtx_lib.o
    0x200004a8        -       0x000000c8   Zero   RW          211    .bss.os.thread.idle.stack  rtx_lib.o
    0x20000570        -       0x00000200   Zero   RW          212    .bss.os.thread.timer.stack  rtx_lib.o
    0x20000770        -       0x00000001   Zero   RW          215    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20000771   0x00004f28   0x00000007   PAD
    0x20000778        -       0x00000000   Zero   RW          234    HEAP                startup_mkl25z4.o
    0x20000778        -       0x00000100   Zero   RW          233    STACK               startup_mkl25z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       562         44          0          0          4       4481   adc.o
       544         68          0          0          0       2473   gpio.o
        80          4          0          0          0        425   main.o
       470         24          0          0          0       4423   pit.o
       466         24          0          0          0       4429   port.o
        72         20          0          0          0        767   rtx_config.o
       322         12        268          0       5637       7210   rtx_lib.o
        80         44        192          0        256        988   startup_mkl25z4.o
       336         80          0          4          0       3364   system_mkl25z4.o
       896        112         50          0         44       2589   threads.o
      1406         88          0          4         40       5647   uart0.o

    ----------------------------------------------------------------------
      5242        520        544          8       5988      36796   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          2          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          0          0          0        658   irq_armv6m.o
       126         20          0          0          1       2812   os_systick.o
       632         20          0          0          0      12579   rtx_evflags.o
       586         36         11        164          0      15793   rtx_kernel.o
       244          0          0          0          0       2665   rtx_memory.o
       156          0          0          0          0      14433   rtx_mempool.o
      1474         40          0          0          0      18183   rtx_msgqueue.o
       922         28          0          0          0       9527   rtx_mutex.o
       542         20          0          0          0      10097   rtx_semaphore.o
       364         18          0          0          0       4871   rtx_system.o
      1696         64          0          0          0      31596   rtx_thread.o
       256         16          0          0          0       9965   rtx_timer.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0         92   _rserrno.o
       364          4          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         8          0          0          0          0         76   rt_errno_addr_twolibspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        46          0          0          0          0         60   cmpret.o
       124          4          0          0          0         72   d2f.o
       856         20          0          0          0        208   daddsub.o
       160          6          0          0          0         76   dcmpin.o
      1096         26        128          0          0        112   ddiv.o
       100          4          0          0          0         92   deqf.o
       108         10          0          0          0         72   dfixi.o
        88          0          0          0          0         92   dflti.o
       584         26          0          0          0         84   dmul.o
        20          6          0          0          0         68   dnan2.o
        96         12          0          0          0         72   dscalbn.o
        84          4          0          0          0         60   f2d.o
       348          8          0          0          0        160   faddsub.o
        70          0          0          0          0        204   fcmp.o
       100          4          0          0          0         68   fcmpin.o
       352         10         64          0          0         92   fdiv.o
        76          0          0          0          0         68   ffixi.o
        94          0          0          0          0         92   fflti.o
        84          4          0          0          0         76   fgef.o
        84          4          0          0          0         76   flef.o
       176          4          0          0          0         80   fmul.o
        16          6          0          0          0         68   fnan2.o
        94          0          0          0          0         68   retnan.o
         0          0          0          0          0          0   usenofp.o
        46          4          0          0          0        204   dunder.o
       852         62         56          0          0        136   log.o
       172          0          0          0          0         76   poly.o
         0          0          8          0          0          0   qnan.o

    ----------------------------------------------------------------------
     14034        514        272        164        100     136775   Library Totals
        28          0          5          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7162        270         11        164          1     133179   RTX_CM0.lib
       918         20          0          0         96       1060   c_p.l
      4856        158        192          0          0       2120   fz_ps.l
      1070         66         64          0          0        416   m_ps.l

    ----------------------------------------------------------------------
     14034        514        272        164        100     136775   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     19276       1034        816        172       6088     171379   Grand Totals
     19276       1034        816        172       6088     171379   ELF Image Totals
     19276       1034        816        172          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                20092 (  19.62kB)
    Total RW  Size (RW Data + ZI Data)              6260 (   6.11kB)
    Total ROM Size (Code + RO Data + RW Data)      20264 (  19.79kB)

==============================================================================

